name: Deploy

on: workflow_dispatch

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ secrets.DOCKERHUB_USERNAME }}/devops-labs:latest
          containerAppName: devops-app
          containerAppEnvironment: devops-app-env
          resourceGroup: devsecops-lab
          location: australiaeast
          targetPort: 5000

      - name: Deploy DAST Container App
        uses: azure/container-apps-deploy-action@v1
        with:
          imageToDeploy: ${{ secrets.DOCKERHUB_USERNAME }}/devops-labs:dast-test
          containerAppName: devops-test-app
          containerAppEnvironment: devops-app-env
          resourceGroup: devsecops-lab
          location: australiaeast
          targetPort: 5000

      # wait 
      - name: Wait for provisioning to complete
        run: sleep 120  # Wait for 2 minutes

      - name: List files in workspace
        run: ls -R $GITHUB_WORKSPACE
      

      - name: Get deployed DAST app URL
        run: |
          export FQDN=$(az containerapp show -n devops-test-app -g devsecops-lab --query properties.configuration.ingress.fqdn -o tsv)
          echo "TEST_APP_URL=https://$FQDN" >> $GITHUB_ENV
          echo "TEST_APP_URL=https://$FQDN"
          curl -L https://$FQDN/ui  # Follow redirects
      
          # Check if openapi3.yml exists in the repository
          if [[ -f "$GITHUB_WORKSPACE/openapi_specs/openapi3.yml" ]]; then
            # Update the file with the new URL
            sed -i "s,http://localhost:5000,https://$FQDN,g" "$GITHUB_WORKSPACE/openapi_specs/openapi3.yml"
          else
            echo "openapi3.yml not found at $GITHUB_WORKSPACE/openapi_specs/openapi3.yml. Skipping sed operation."
          fi

      - name: ZAP Scan
        uses: zaproxy/action-api-scan@v0.6.0
        with:
         token: ${{ secrets.GITHUB_TOKEN }}
         docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
         format: openapi
         target: /zap/wrk/openapi_specs/openapi3.yml
         rules_file_name: .zap/rules.tsv
         cmd_options: '-a -c /zap/wrk/.zap/rules.tsv'
         fail_action: false
         allow_issue_writing: false
        
      - name: Upload ZAP report
        id: artifact-zap
        uses: actions/upload-artifact@v4
        with:
         name: zap-report
         path: report_json.json
      
  # submit_results:
  #           needs: [deploy]
  #           if: true
  #           runs-on: ubuntu-latest
  #           steps:
  #             - uses: azure/login@v1
  #               with:
  #                 creds: ${{ secrets.AZURE_CREDENTIALS }}
        
  #             - name: Azure CLI script
  #               id: token-gen
  #               uses: azure/CLI@v1
  #               with:
  #                 azcliversion: latest
  #                 inlineScript: |
  #                   ACCESS_TOKEN=$(az account get-access-token | jq -r .accessToken)
  #                   echo "azureAccessToken=$ACCESS_TOKEN" >> "$GITHUB_OUTPUT"
  #             - name: Upload reports
  #               env:
  #                 DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  #                 AZURE_ACCESS_TOKEN: ${{ steps.token-gen.outputs.azureAccessToken }}
  #               run: |
  #                 export FQDN=$(az containerapp show -n devops-app -g devsecops-lab --query properties.configuration.ingress.fqdn -o tsv)
  #                 echo "FQDN: $FQDN"
  #                 WEEK2_SUBMIT=$(curl -X POST -H "Authorization: Bearer $AZURE_ACCESS_TOKEN" -d "https://$FQDN" https://devsecops-ver.azurewebsites.net/api/week2-submit)
  #                 echo "Week2 submit: $WEEK2_SUBMIT"  
